using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Tutorial.OOP.Base;
using Tutorial.OOP.Inheritance;

namespace Tutorial
{
    class Program
    {
        /*
         * Проект был создан в целях отображения всех парадигм ООП на примерах с описаниями.
         * Парадигмы:
         *      1. Инкапсуляция
         *      2. Наследование
         *      3. Полиморфизм
         *      4. (Опционально) Абстракция
         *      (Почему Абстракция опциональна? Первые 3 парадигмы обязательны для изучения, последний же лишь еще один взгляд
         *      на выше перечисленные парадигмы и постигается за 3 секунды)
         * 
         * Парадигмы были перечислены в данном порядке не случайно. Без инкапсуляции невозможно наследование, без наследования
         *  невозможен полиморфизм. По этому считается что весь ООП построен на Полиморфизме и считается самой важной парадигмой.
         * Изучая одну из парадигм вы все равно столкнетесь со смешением с другой парадигмой. К примеру, при изучении Наследования
         *  в любом случае вам придется столкнуться с Икапсуляцией и иметь хоть какое-то понимание о данное парадигме.
         * А лучше шарить все и сразу :)
         * 
         * Итак, для более благоприятного обучения лучше начать с Инкапсуляции и дальше по списку. Ехала)
         */
        static void Main(string[] args)
        {

            Application application = new Application();
            application.Run();

            Console.ReadKey();

        }

    }
}
